import numpy as np
user_item_matrix = np.array([
    [5, 4, 0, 0, 1, 0],
    [0, 0, 5, 4, 0, 0],
    [4, 5, 0, 0, 2, 0],
    [0, 0, 4, 5, 0, 0],
    [0, 0, 0, 0, 5, 4],
])

def recommend_items(user_item_matrix, user_id, top_n=3):
   
    similarities = []
    for other_id in range(user_item_matrix.shape[0]):
        if other_id == user_id:
            continue
        similarity = np.dot(user_item_matrix[user_id], user_item_matrix[other_id]) / \
                     (np.linalg.norm(user_item_matrix[user_id]) * np.linalg.norm(user_item_matrix[other_id]))
        similarities.append((other_id, similarity))

  
    similarities.sort(key=lambda x: x[1], reverse=True)
    top_similar_users = similarities[:top_n]

    recommended_items = set()
    for similar_user, _ in top_similar_users:
        for item_id, rating in enumerate(user_item_matrix[similar_user]):
            if rating > 0 and user_item_matrix[user_id, item_id] == 0:
                recommended_items.add(item_id)

    return list(recommended_items)[:top_n]


user_id = 0  # Replace with the user ID for whom you want to recommend items
recommended_items = recommend_items(user_item_matrix, user_id)
print(f"Recommended items for user {user_id}: {recommended_items}")
